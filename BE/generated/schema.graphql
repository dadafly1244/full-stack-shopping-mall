### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  refresh_token: String
  token: String
  user: User!
}

type Cart {
  count: Int!
  created_at: DateTime!
  id: String!
  is_ordered: Boolean!
  orders: [Order!]!
  product: Product!
  product_id: String!
  updated_at: DateTime!
  user_id: String!
}

type Category {
  category_parent_id: Int
  id: Int!
  name: String!
  parent: Category
  products: [Product!]!
  subcategories: [Category!]!
}

input CategoryOrderByInput {
  id: SortOrder
  name: SortOrder
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum Gender {
  FEMALE
  MALE
  OTHER
  PREFER_NOT_TO_SAY
}

scalar JSON

type Mutation {
  createCategory(name: String!, parentId: Int): Category!
  createProduct(category_id: Int!, count: Int, desc: String, desc_images_path: JSON, is_deleted: Boolean, main_image_path: String!, name: String!, price: Int!, sale: Int, status: ProductStatus!, store_id: String!): Product!
  createStore(business_registration_number: String!, desc: String, name: String!): Store
  createUser(email: String!, gender: Gender!, name: String!, password: String!, permissions: UserPermissions!, phone_number: String, status: UserStatus!, user_id: String!): User!
  deleteCategory(categoryId: Int!): Boolean
  deleteProductIfUnused(id: String!): Product!
  deleteStore(id: String!): Store
  mergeCategories(categoryId1: Int!, categoryId2: Int!, newName: String!): Category!
  refresh(refresh_token: String!): AuthPayload!
  renameCategory(categoryId: Int!, newName: String!): Category!
  signin(password: String!, user_id: String!): AuthPayload!
  signout(id: String!): User!
  signup(email: String!, gender: Gender!, name: String!, password: String!, permissions: UserPermissions!, phone_number: String, status: UserStatus!, user_id: String!): AuthPayload!
  updateProduct(category_id: Int, count: Int, desc: String, desc_images_path: JSON, id: String!, main_image_path: String, name: String, price: Int, sale: Int): Product!
  updateProductStatus(id: String!, status: ProductStatus!): Product!
  updateStore(business_registration_number: String, desc: String, id: String!, name: String): Store
  updateUser(email: String, gender: Gender, id: String!, name: String, permissions: UserPermissions, phone_number: String, user_id: String): User!
  updateUserStateActive(id: String!): AuthPayload!
  updateUserStateSuspended(id: String!): AuthPayload!
  withdrawal(password: String!, user_id: String!): AuthPayload
}

type Order {
  address: String
  carts: [Cart!]!
  created_at: DateTime!
  id: String!
  is_deleted: String
  price_at_order: Int!
  status: OrderStatus!
  updated_at: DateTime!
  user: User!
  user_id: String!
}

enum OrderStatus {
  CANCELLED
  DELIVERED
  ORDER
  READY_TO_ORDER
  REFUND
  UNKNOWN
}

type PageInfo {
  currentPage: Int!
  pageSize: Int!
  totalCount: Int!
  totalPages: Int!
}

type PaginatedProductsResult {
  pageInfo: PageInfo!
  products: [Product!]!
}

type Product {
  carts: [Cart!]!
  categories: [Category!]!
  category: Category
  count: Int!
  created_at: DateTime!
  desc: String
  desc_images_path: JSON
  id: ID!
  is_deleted: Boolean!
  main_image_path: String!
  name: String!
  price: Int!
  reviews: [Review!]!
  sale: Int
  status: ProductStatus!
  store: Store
  store_id: String!
  updated_at: DateTime!
}

enum ProductStatus {
  AVAILABLE
  DISCONTINUED
  OUT_OF_STOCK
  PROHIBITION_ON_SALE
  TEMPORARILY_OUT_OF_STOCK
}

type Query {
  categories(includeHierarchy: Boolean, orderBy: CategoryOrderByInput): [Category!]!
  category(id: Int!, includeHierarchy: Boolean): Category
  filteredUsers(email: String, gender: Gender, name: String, permissions: UserPermissions, phone_number: String, status: UserStatus, user_id: String): [User]!
  getAllProducts(page: Int! = 1, pageSize: Int! = 10): PaginatedProductsResult!
  getProduct(id: String!): Product
  isDuplicated(business_registration_number: String): Boolean
  searchCategories(includeHierarchy: Boolean, nameContains: String!): [Category!]!
  searchProducts(category_id: Int, desc: String, id: String, name: String, page: Int! = 1, pageSize: Int! = 10, store_id: String): PaginatedProductsResult!
  searchStores(searchTerm: String!): [Store]
  store(id: String!): Store
  stores: [Store]
  usersList: [User]!
}

type Review {
  childReviews: [Review]
  created_at: DateTime!
  desc: String
  id: ID!
  images_path: JSON
  is_deleted: Boolean!
  parentReview: Review
  parent_review_id: String
  product: Product
  product_id: String!
  score: Float!
  title: String!
  updated_at: DateTime!
  user: User
  user_id: String!
}

enum SortOrder {
  asc
  desc
}

type Store {
  business_registration_number: String!
  desc: String
  id: ID!
  name: String!
  products: [Product!]
}

type User {
  carts: [Cart!]
  created_at: DateTime!
  email: String!
  gender: Gender!
  id: ID!
  name: String!
  orders: [Order!]
  password: String!
  permissions: UserPermissions!
  phone_number: String
  reviews: [Review!]
  status: UserStatus!
  updated_at: DateTime!
  user_id: String!
}

type UserBoolean {
  duplicated: Boolean!
}

enum UserPermissions {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}